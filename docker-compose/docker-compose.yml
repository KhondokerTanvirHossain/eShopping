version: '3.4'

services:
  catalog.api:
    image: ${DOCKER_REGISTRY-}catalogapi
    build:
      context: ..
      dockerfile: Catalog.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "CatalogDatabaseSettings:ConnectingString=mongodb://catalogdb:27017"
    expose:
      - "80"
    ports:
      - "8000:80"
    depends_on:
      - catalogdb
    volumes:
      - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
      - ${HOME}/.aspnet/https:/root/.aspnet/https/
    links:
      - catalogdb

  basket.api:
    image: ${DOCKER_REGISTRY-}basketapi
    build:
      context: ..
      dockerfile: Basket.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:Redis=basketdb:6379"
      - "EventBus:HostName=rabbitmq"
    expose:
      - "80"
    ports:
      - "8001:80"
    depends_on:
      - basketdb
      - rabbitmq
    volumes:
      - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
      - ${HOME}/.aspnet/https:/root/.aspnet/https/
    links:
      - basketdb

  catalogdb:
    image: mongo
    container_name: catalogdb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ${WEBAPP_STORAGE_HOME}/site:/data/db

  basketdb:
    image: redis
    container_name: basketdb
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ${WEBAPP_STORAGE_HOME}/site:/data/db

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"